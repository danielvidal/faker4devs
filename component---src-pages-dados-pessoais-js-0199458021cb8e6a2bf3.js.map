{"version":3,"sources":["webpack:///./src/components/fakers/cpf-faker.js","webpack:///./src/components/fakers/person-faker.js","webpack:///./src/pages/dados-pessoais.js","webpack:///./node_modules/@material-ui/core/esm/Grid/Grid.js"],"names":["CPFFaker","React","useState","FakeGenerator","generateCPF","cpf","setCpf","value","readOnly","style","minWidth","endAdornment","position","color","purple","onClick","fontSize","copyToClipboard","PersonFaker","generatePersonName","name","setName","generatePersonPhone","phone","setPhone","Grid","container","spacing","item","xs","OutlinedInput","InputAdornment","IconButton","CPF","title","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","concat","String","replace","forwardRef","props","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classes","classNameProp","className","_props$component","component","Component","_props$container","_props$direction","direction","_props$item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","_props$zeroMinWidth","zeroMinWidth","other","root","createElement","StyledGrid","theme","boxSizing","display","flexWrap","width","margin","flexDirection","justifyContent","breakpoint","styles","forEach","themeSpacing","padding","generateGutter","breakpoints","keys","reduce","accumulator","key","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid"],"mappings":"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","file":"component---src-pages-dados-pessoais-js-0199458021cb8e6a2bf3.js","sourcesContent":["import React from \"react\"\n\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\"\nimport InputAdornment from \"@material-ui/core/InputAdornment\"\nimport IconButton from \"@material-ui/core/IconButton\"\n\nimport Cached from '@material-ui/icons/Cached'\nimport FileCopy from '@material-ui/icons/FileCopy'\n\nimport FakeGenerator from '../../libs/fake-generator'\n\nimport { purple } from '@material-ui/core/colors'\n\nconst CPFFaker = () => {\n  const [cpf, setCpf] = React.useState(FakeGenerator.generateCPF())\n\n  return (\n    <OutlinedInput\n      value={cpf}\n      readOnly={true}\n      style={{ minWidth: '280px' }}\n      endAdornment={\n        <InputAdornment position=\"end\">\n          <IconButton style={{ color: purple[700] }} onClick={() => setCpf(FakeGenerator.generateCPF())}>\n            <Cached fontSize=\"small\" />\n          </IconButton>\n          <IconButton style={{ color: purple[700] }} onClick={() => FakeGenerator.copyToClipboard(cpf)}>\n            <FileCopy fontSize=\"small\" />\n          </IconButton>\n        </InputAdornment>\n      }\n    />\n  )\n}\n\nexport default CPFFaker\n","import React from \"react\"\n\nimport Grid from \"@material-ui/core/Grid\"\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\"\nimport InputAdornment from \"@material-ui/core/InputAdornment\"\nimport IconButton from \"@material-ui/core/IconButton\"\n\nimport Cached from '@material-ui/icons/Cached'\nimport FileCopy from '@material-ui/icons/FileCopy'\n\nimport CPFFaker from './cpf-faker'\n\nimport FakeGenerator from '../../libs/fake-generator'\n\nimport { purple } from '@material-ui/core/colors'\n\nconst PersonFaker = () => {\n  const [name, setName] = React.useState(FakeGenerator.generatePersonName())\n  const [phone, setPhone] = React.useState(FakeGenerator.generatePersonPhone())\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <CPFFaker />\n      </Grid>\n\n      <Grid item xs={12}>\n        <OutlinedInput\n          value={name}\n          readOnly={true}\n          style={{ minWidth: '280px' }}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton style={{ color: purple[700] }} onClick={() => setName(FakeGenerator.generatePersonName())}>\n                <Cached fontSize=\"small\" />\n              </IconButton>\n              <IconButton style={{ color: purple[700] }} onClick={() => FakeGenerator.copyToClipboard(name)}>\n                <FileCopy fontSize=\"small\" />\n              </IconButton>\n            </InputAdornment>\n          }\n        />\n      </Grid>\n\n      <Grid item xs={12}>\n        <OutlinedInput\n          value={phone}\n          readOnly={true}\n          style={{ minWidth: '280px' }}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton style={{ color: purple[700] }} onClick={() => setPhone(FakeGenerator.generatePersonPhone())}>\n                <Cached fontSize=\"small\" />\n              </IconButton>\n              <IconButton style={{ color: purple[700] }} onClick={() => FakeGenerator.copyToClipboard(phone)}>\n                <FileCopy fontSize=\"small\" />\n              </IconButton>\n            </InputAdornment>\n          }\n        />\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default PersonFaker\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PersonFaker from \"../components/fakers/person-faker\"\n\nconst CPF = () => (\n  <Layout>\n    <SEO title=\"Dados pessoais\" />\n    <h1>Gerador de dados pessoais</h1>\n    <PersonFaker />\n  </Layout>\n)\n\nexport default CPF\n","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.array.reduce\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.for-each\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"rwo-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), {}, theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;"],"sourceRoot":""}